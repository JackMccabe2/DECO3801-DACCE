services:
  database:
    image: postgres
    container_name: database
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - db-data:/var/lib/postgresql/data/pgdata
      - ./Database/psql_database.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    env_file:
      - .env
    ports:
      - 5432:5432
  
  server:
    build:
      context: server
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - DB_HOST=database
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_PORT=5432
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
        restart: true
  
  frontend:
    build:
      context: Frontend_React/dacce
      dockerfile: Dockerfile
    ports:
      - 5173:5173
    environment:
      - VITE_SERVER_PORT=8080
      - VITE_SERVER_HOSTNAME=server
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
        restart: true

volumes:
  db-data: